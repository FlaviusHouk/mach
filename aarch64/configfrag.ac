dnl Configure fragment for aarch64.

dnl Permission to use, copy, modify and distribute this software and its
dnl documentation is hereby granted, provided that both the copyright
dnl notice and this permission notice appear in all copies of the
dnl software, derivative works or modified versions, and any portions
dnl thereof, and that both notices appear in supporting documentation.
dnl
dnl THE FREE SOFTWARE FOUNDATION ALLOWS FREE USE OF THIS SOFTWARE IN ITS
dnl "AS IS" CONDITION.  THE FREE SOFTWARE FOUNDATION DISCLAIMS ANY
dnl LIABILITY OF ANY KIND FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE
dnl USE OF THIS SOFTWARE.

[case $host_cpu in
  aarch64)]
    AM_CONDITIONAL([HOST_aarch64], [true])[;;
  *)]
    AM_CONDITIONAL([HOST_aarch64], [false])[;;
esac

case $host_platform in
  rpi4)]
    AM_CONDITIONAL([PLATFORM_rpi4], [true])

	# It used /include/cache.h to allow aligning 
	# of the data in the new cache line. Not sure how 
	# does x86 L1 cache works, but in A72 it is 
	# complex record in 8 bytes (64 bits) it will 
	# technically work, but I am not sure how is 
	# this supposed to work.
    AC_DEFINE([CPU_L1_SHIFT], [3], [CPU_L1_SHIFT])[;;
  *)]
    AM_CONDITIONAL([PLATFORM_rpi4], [false])[;;
esac]

AC_ARG_WITH([_START_MAP],
  AS_HELP_STRING([--with-_START_MAP=0], [specify kernel mapping start address]),
  [_START_MAP="$withval"], [_START_MAP=0])
AC_SUBST(_START_MAP)
